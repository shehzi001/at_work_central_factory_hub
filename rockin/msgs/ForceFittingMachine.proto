/*  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * - Neither the name of the authors nor the names of its contributors
 *   may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package rockin_msgs;

option java_package = "org.rockin.common_msgs";
option java_outer_classname = "ForceFittingMachineProtos";

message ForceFittingMachineStatus {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 306;
  }

  enum State {
    AT_TOP      = 0;  // The fitting cone is in the topmost position
    AT_BOTTOM   = 1;  // The fitting cone is in the lowermost position
    MOVING_UP   = 2;  // The fitting cone is moving upwards
    MOVING_DOWN = 3;  // The fitting cone is moving downwards
    UNKNOWN     = 4;  // The position of the fitting cone cannot be determined (e.g. because there is no connection to the force fitting machine)
  }

  // The current position/motion state of the force-fitting machine
  required State state = 1;
}

message ForceFittingMachineCommand {
  enum CompType {
    COMP_ID  = 2000;
    MSG_TYPE = 307;
  }

   enum Command {
    MOVE_DOWN = 0;  // Instruct the force-fitting machine to move downwards
    MOVE_UP   = 1;  // Instruct the force-fitting machine to move upwards
  }

  // The desired motion state of the force-fitting machine
  required Command command = 1;
}
